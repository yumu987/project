%-----------------------------------------------------------------------
% Feature Similarity Index
% https://web.comp.polyu.edu.hk/cslzhang/IQA/FSIM/FSIM.htm
% https://www4.comp.polyu.edu.hk/~cslzhang/IQA/TIP_IQA_FSIM.pdf
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% Dataset from Nick Yue
% Special thanks to nick :)
% Pre-processing images produced by Yumu Xie
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% EENG30009 Individual Research Project 3
% TOPIC: Single-image Super-resolution
%
% Yumu Xie
% University of Bristol
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% Global variables
%-----------------------------------------------------------------------
% Clear all variables in the workspace
clear;

% Clear all commands in command space
clc;

% Indication of script executing
disp('Extra FeatureSIM script is executing');

% Compressed 1
global compressed_one_fsim_array;
global compressed_one_fsimc_array;
compressed_one_fsim_array = [];
compressed_one_fsimc_array = [];

% Compressed 25
global compressed_twofive_fsim_array;
global compressed_twofive_fsimc_array;
compressed_twofive_fsim_array = [];
compressed_twofive_fsimc_array = [];

% Compressed 50
global compressed_fivezero_fsim_array;
global compressed_fivezero_fsimc_array;
compressed_fivezero_fsim_array = [];
compressed_fivezero_fsimc_array = [];

% Compressed 75
global compressed_sevenfive_fsim_array;
global compressed_sevenfive_fsimc_array;
compressed_sevenfive_fsim_array = [];
compressed_sevenfive_fsimc_array = [];

% Compressed 100
global compressed_onezerozero_fsim_array;
global compressed_onezerozero_fsimc_array;
compressed_onezerozero_fsim_array = [];
compressed_onezerozero_fsimc_array = [];

% Encoded
global encoded_fsim_array;
global encoded_fsimc_array;
encoded_fsim_array = [];
encoded_fsimc_array = [];

% Decoded
global decoded_fsim_array;
global decoded_fsimc_array;
decoded_fsim_array = [];
decoded_fsimc_array = [];
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% FSIM and FSIMc
%-----------------------------------------------------------------------
% Compressed 1
for i = 1:25
    % Reference images
    input_image_files = {
    'input/001.jpg'...
    'input/002.jpg'...
    'input/003.jpg'...
    'input/004.jpg'...
    'input/005.jpg'...
    'input/006.jpg'...
    'input/007.jpg'...
    'input/008.jpg'...
    'input/009.jpg'...
    'input/010.jpg'...
    'input/011.jpg'...
    'input/012.jpg'...
    'input/013.jpg'...
    'input/014.jpg'...
    'input/015.jpg'...
    'input/016.jpg'...
    'input/017.jpg'...
    'input/018.jpg'...
    'input/019.jpg'...
    'input/020.jpg'...
    'input/021.jpg'...
    'input/022.jpg'...
    'input/023.jpg'...
    'input/024.jpg'...
    'input/025.jpg'
    };
    % Distorted images
    compressed_one_image_files = {   
    'input_compressed_1/001_compressed_1.jpg'...
    'input_compressed_1/002_compressed_1.jpg'...
    'input_compressed_1/003_compressed_1.jpg'...
    'input_compressed_1/004_compressed_1.jpg'...
    'input_compressed_1/005_compressed_1.jpg'...
    'input_compressed_1/006_compressed_1.jpg'...
    'input_compressed_1/007_compressed_1.jpg'...
    'input_compressed_1/008_compressed_1.jpg'...
    'input_compressed_1/009_compressed_1.jpg'...
    'input_compressed_1/010_compressed_1.jpg'...
    'input_compressed_1/011_compressed_1.jpg'...
    'input_compressed_1/012_compressed_1.jpg'...
    'input_compressed_1/013_compressed_1.jpg'...
    'input_compressed_1/014_compressed_1.jpg'...
    'input_compressed_1/015_compressed_1.jpg'...
    'input_compressed_1/016_compressed_1.jpg'...
    'input_compressed_1/017_compressed_1.jpg'...
    'input_compressed_1/018_compressed_1.jpg'...
    'input_compressed_1/019_compressed_1.jpg'...
    'input_compressed_1/020_compressed_1.jpg'...
    'input_compressed_1/021_compressed_1.jpg'...
    'input_compressed_1/022_compressed_1.jpg'...
    'input_compressed_1/023_compressed_1.jpg'...
    'input_compressed_1/024_compressed_1.jpg'...
    'input_compressed_1/025_compressed_1.jpg'
    };
    % Read reference image
    ref_img = imread(input_image_files{i});
    % Read distorted image
    dis_img = imread(compressed_one_image_files{i});
    % Perform calculation of FSIM and FSIMc
    [FSIM, FSIMc] = FeatureSIM(ref_img, dis_img);
    % Save FSIM and FSIMc into FSIM and FSIMc arrays
    compressed_one_fsim_array(i) = FSIM;
    compressed_one_fsimc_array(i) = FSIMc;
end

% Compressed 25
for i = 1:25
    % Reference images
    input_image_files = {
    'input/001.jpg'...
    'input/002.jpg'...
    'input/003.jpg'...
    'input/004.jpg'...
    'input/005.jpg'...
    'input/006.jpg'...
    'input/007.jpg'...
    'input/008.jpg'...
    'input/009.jpg'...
    'input/010.jpg'...
    'input/011.jpg'...
    'input/012.jpg'...
    'input/013.jpg'...
    'input/014.jpg'...
    'input/015.jpg'...
    'input/016.jpg'...
    'input/017.jpg'...
    'input/018.jpg'...
    'input/019.jpg'...
    'input/020.jpg'...
    'input/021.jpg'...
    'input/022.jpg'...
    'input/023.jpg'...
    'input/024.jpg'...
    'input/025.jpg'
    };
    % Distorted images
    compressed_twofive_image_files = {   
    'input_compressed_25/001_compressed_25.jpg'...
    'input_compressed_25/002_compressed_25.jpg'...
    'input_compressed_25/003_compressed_25.jpg'...
    'input_compressed_25/004_compressed_25.jpg'...
    'input_compressed_25/005_compressed_25.jpg'...
    'input_compressed_25/006_compressed_25.jpg'...
    'input_compressed_25/007_compressed_25.jpg'...
    'input_compressed_25/008_compressed_25.jpg'...
    'input_compressed_25/009_compressed_25.jpg'...
    'input_compressed_25/010_compressed_25.jpg'...
    'input_compressed_25/011_compressed_25.jpg'...
    'input_compressed_25/012_compressed_25.jpg'...
    'input_compressed_25/013_compressed_25.jpg'...
    'input_compressed_25/014_compressed_25.jpg'...
    'input_compressed_25/015_compressed_25.jpg'...
    'input_compressed_25/016_compressed_25.jpg'...
    'input_compressed_25/017_compressed_25.jpg'...
    'input_compressed_25/018_compressed_25.jpg'...
    'input_compressed_25/019_compressed_25.jpg'...
    'input_compressed_25/020_compressed_25.jpg'...
    'input_compressed_25/021_compressed_25.jpg'...
    'input_compressed_25/022_compressed_25.jpg'...
    'input_compressed_25/023_compressed_25.jpg'...
    'input_compressed_25/024_compressed_25.jpg'...
    'input_compressed_25/025_compressed_25.jpg'
    };
    % Read reference image
    ref_img = imread(input_image_files{i});
    % Read distorted image
    dis_img = imread(compressed_twofive_image_files{i});
    % Perform calculation of FSIM and FSIMc
    [FSIM, FSIMc] = FeatureSIM(ref_img, dis_img);
    % Save FSIM and FSIMc into FSIM and FSIMc arrays
    compressed_twofive_fsim_array(i) = FSIM;
    compressed_twofive_fsimc_array(i) = FSIMc;
end

% Compressed 50
for i = 1:25
    % Reference images
    input_image_files = {
    'input/001.jpg'...
    'input/002.jpg'...
    'input/003.jpg'...
    'input/004.jpg'...
    'input/005.jpg'...
    'input/006.jpg'...
    'input/007.jpg'...
    'input/008.jpg'...
    'input/009.jpg'...
    'input/010.jpg'...
    'input/011.jpg'...
    'input/012.jpg'...
    'input/013.jpg'...
    'input/014.jpg'...
    'input/015.jpg'...
    'input/016.jpg'...
    'input/017.jpg'...
    'input/018.jpg'...
    'input/019.jpg'...
    'input/020.jpg'...
    'input/021.jpg'...
    'input/022.jpg'...
    'input/023.jpg'...
    'input/024.jpg'...
    'input/025.jpg'
    };
    % Distorted images
    compressed_fivezero_image_files = {   
    'input_compressed_50/001_compressed_50.jpg'...
    'input_compressed_50/002_compressed_50.jpg'...
    'input_compressed_50/003_compressed_50.jpg'...
    'input_compressed_50/004_compressed_50.jpg'...
    'input_compressed_50/005_compressed_50.jpg'...
    'input_compressed_50/006_compressed_50.jpg'...
    'input_compressed_50/007_compressed_50.jpg'...
    'input_compressed_50/008_compressed_50.jpg'...
    'input_compressed_50/009_compressed_50.jpg'...
    'input_compressed_50/010_compressed_50.jpg'...
    'input_compressed_50/011_compressed_50.jpg'...
    'input_compressed_50/012_compressed_50.jpg'...
    'input_compressed_50/013_compressed_50.jpg'...
    'input_compressed_50/014_compressed_50.jpg'...
    'input_compressed_50/015_compressed_50.jpg'...
    'input_compressed_50/016_compressed_50.jpg'...
    'input_compressed_50/017_compressed_50.jpg'...
    'input_compressed_50/018_compressed_50.jpg'...
    'input_compressed_50/019_compressed_50.jpg'...
    'input_compressed_50/020_compressed_50.jpg'...
    'input_compressed_50/021_compressed_50.jpg'...
    'input_compressed_50/022_compressed_50.jpg'...
    'input_compressed_50/023_compressed_50.jpg'...
    'input_compressed_50/024_compressed_50.jpg'...
    'input_compressed_50/025_compressed_50.jpg'
    };
    % Read reference image
    ref_img = imread(input_image_files{i});
    % Read distorted image
    dis_img = imread(compressed_fivezero_image_files{i});
    % Perform calculation of FSIM and FSIMc
    [FSIM, FSIMc] = FeatureSIM(ref_img, dis_img);
    % Save FSIM and FSIMc into FSIM and FSIMc arrays
    compressed_fivezero_fsim_array(i) = FSIM;
    compressed_fivezero_fsimc_array(i) = FSIMc;
end

% Compressed 75
for i = 1:25
    % Reference images
    input_image_files = {
    'input/001.jpg'...
    'input/002.jpg'...
    'input/003.jpg'...
    'input/004.jpg'...
    'input/005.jpg'...
    'input/006.jpg'...
    'input/007.jpg'...
    'input/008.jpg'...
    'input/009.jpg'...
    'input/010.jpg'...
    'input/011.jpg'...
    'input/012.jpg'...
    'input/013.jpg'...
    'input/014.jpg'...
    'input/015.jpg'...
    'input/016.jpg'...
    'input/017.jpg'...
    'input/018.jpg'...
    'input/019.jpg'...
    'input/020.jpg'...
    'input/021.jpg'...
    'input/022.jpg'...
    'input/023.jpg'...
    'input/024.jpg'...
    'input/025.jpg'
    };
    % Distorted images
    compressed_sevenfive_image_files = {   
    'input_compressed_75/001_compressed_75.jpg'...
    'input_compressed_75/002_compressed_75.jpg'...
    'input_compressed_75/003_compressed_75.jpg'...
    'input_compressed_75/004_compressed_75.jpg'...
    'input_compressed_75/005_compressed_75.jpg'...
    'input_compressed_75/006_compressed_75.jpg'...
    'input_compressed_75/007_compressed_75.jpg'...
    'input_compressed_75/008_compressed_75.jpg'...
    'input_compressed_75/009_compressed_75.jpg'...
    'input_compressed_75/010_compressed_75.jpg'...
    'input_compressed_75/011_compressed_75.jpg'...
    'input_compressed_75/012_compressed_75.jpg'...
    'input_compressed_75/013_compressed_75.jpg'...
    'input_compressed_75/014_compressed_75.jpg'...
    'input_compressed_75/015_compressed_75.jpg'...
    'input_compressed_75/016_compressed_75.jpg'...
    'input_compressed_75/017_compressed_75.jpg'...
    'input_compressed_75/018_compressed_75.jpg'...
    'input_compressed_75/019_compressed_75.jpg'...
    'input_compressed_75/020_compressed_75.jpg'...
    'input_compressed_75/021_compressed_75.jpg'...
    'input_compressed_75/022_compressed_75.jpg'...
    'input_compressed_75/023_compressed_75.jpg'...
    'input_compressed_75/024_compressed_75.jpg'...
    'input_compressed_75/025_compressed_75.jpg'
    };
    % Read reference image
    ref_img = imread(input_image_files{i});
    % Read distorted image
    dis_img = imread(compressed_sevenfive_image_files{i});
    % Perform calculation of FSIM and FSIMc
    [FSIM, FSIMc] = FeatureSIM(ref_img, dis_img);
    % Save FSIM and FSIMc into FSIM and FSIMc arrays
    compressed_sevenfive_fsim_array(i) = FSIM;
    compressed_sevenfive_fsimc_array(i) = FSIMc;
end

% Compressed 100
for i = 1:25
    % Reference images
    input_image_files = {
    'input/001.jpg'...
    'input/002.jpg'...
    'input/003.jpg'...
    'input/004.jpg'...
    'input/005.jpg'...
    'input/006.jpg'...
    'input/007.jpg'...
    'input/008.jpg'...
    'input/009.jpg'...
    'input/010.jpg'...
    'input/011.jpg'...
    'input/012.jpg'...
    'input/013.jpg'...
    'input/014.jpg'...
    'input/015.jpg'...
    'input/016.jpg'...
    'input/017.jpg'...
    'input/018.jpg'...
    'input/019.jpg'...
    'input/020.jpg'...
    'input/021.jpg'...
    'input/022.jpg'...
    'input/023.jpg'...
    'input/024.jpg'...
    'input/025.jpg'
    };
    % Distorted images
    compressed_onezerozero_image_files = {   
    'input_compressed_100/001_compressed_100.jpg'...
    'input_compressed_100/002_compressed_100.jpg'...
    'input_compressed_100/003_compressed_100.jpg'...
    'input_compressed_100/004_compressed_100.jpg'...
    'input_compressed_100/005_compressed_100.jpg'...
    'input_compressed_100/006_compressed_100.jpg'...
    'input_compressed_100/007_compressed_100.jpg'...
    'input_compressed_100/008_compressed_100.jpg'...
    'input_compressed_100/009_compressed_100.jpg'...
    'input_compressed_100/010_compressed_100.jpg'...
    'input_compressed_100/011_compressed_100.jpg'...
    'input_compressed_100/012_compressed_100.jpg'...
    'input_compressed_100/013_compressed_100.jpg'...
    'input_compressed_100/014_compressed_100.jpg'...
    'input_compressed_100/015_compressed_100.jpg'...
    'input_compressed_100/016_compressed_100.jpg'...
    'input_compressed_100/017_compressed_100.jpg'...
    'input_compressed_100/018_compressed_100.jpg'...
    'input_compressed_100/019_compressed_100.jpg'...
    'input_compressed_100/020_compressed_100.jpg'...
    'input_compressed_100/021_compressed_100.jpg'...
    'input_compressed_100/022_compressed_100.jpg'...
    'input_compressed_100/023_compressed_100.jpg'...
    'input_compressed_100/024_compressed_100.jpg'...
    'input_compressed_100/025_compressed_100.jpg'
    };
    % Read reference image
    ref_img = imread(input_image_files{i});
    % Read distorted image
    dis_img = imread(compressed_onezerozero_image_files{i});
    % Perform calculation of FSIM and FSIMc
    [FSIM, FSIMc] = FeatureSIM(ref_img, dis_img);
    % Save FSIM and FSIMc into FSIM and FSIMc arrays
    compressed_onezerozero_fsim_array(i) = FSIM;
    compressed_onezerozero_fsimc_array(i) = FSIMc;
end

% Encoded
for i = 1:25
    % Reference images
    input_image_files = {
    'input/001.jpg'...
    'input/002.jpg'...
    'input/003.jpg'...
    'input/004.jpg'...
    'input/005.jpg'...
    'input/006.jpg'...
    'input/007.jpg'...
    'input/008.jpg'...
    'input/009.jpg'...
    'input/010.jpg'...
    'input/011.jpg'...
    'input/012.jpg'...
    'input/013.jpg'...
    'input/014.jpg'...
    'input/015.jpg'...
    'input/016.jpg'...
    'input/017.jpg'...
    'input/018.jpg'...
    'input/019.jpg'...
    'input/020.jpg'...
    'input/021.jpg'...
    'input/022.jpg'...
    'input/023.jpg'...
    'input/024.jpg'...
    'input/025.jpg'
    };
    % Distorted images
    encoded_image_files = {   
    'input_encoded/001_encoded.jpg'...
    'input_encoded/002_encoded.jpg'...
    'input_encoded/003_encoded.jpg'...
    'input_encoded/004_encoded.jpg'...
    'input_encoded/005_encoded.jpg'...
    'input_encoded/006_encoded.jpg'...
    'input_encoded/007_encoded.jpg'...
    'input_encoded/008_encoded.jpg'...
    'input_encoded/009_encoded.jpg'...
    'input_encoded/010_encoded.jpg'...
    'input_encoded/011_encoded.jpg'...
    'input_encoded/012_encoded.jpg'...
    'input_encoded/013_encoded.jpg'...
    'input_encoded/014_encoded.jpg'...
    'input_encoded/015_encoded.jpg'...
    'input_encoded/016_encoded.jpg'...
    'input_encoded/017_encoded.jpg'...
    'input_encoded/018_encoded.jpg'...
    'input_encoded/019_encoded.jpg'...
    'input_encoded/020_encoded.jpg'...
    'input_encoded/021_encoded.jpg'...
    'input_encoded/022_encoded.jpg'...
    'input_encoded/023_encoded.jpg'...
    'input_encoded/024_encoded.jpg'...
    'input_encoded/025_encoded.jpg'
    };
    % Read reference image
    ref_img = imread(input_image_files{i});
    % Read distorted image
    dis_img = imread(encoded_image_files{i});
    % Perform calculation of FSIM and FSIMc
    [FSIM, FSIMc] = FeatureSIM(ref_img, dis_img);
    % Save FSIM and FSIMc into FSIM and FSIMc arrays
    encoded_fsim_array(i) = FSIM;
    encoded_fsimc_array(i) = FSIMc;
end

% Decoded
for i = 1:25
    % Reference images
    input_image_files = {
    'input/001.jpg'...
    'input/002.jpg'...
    'input/003.jpg'...
    'input/004.jpg'...
    'input/005.jpg'...
    'input/006.jpg'...
    'input/007.jpg'...
    'input/008.jpg'...
    'input/009.jpg'...
    'input/010.jpg'...
    'input/011.jpg'...
    'input/012.jpg'...
    'input/013.jpg'...
    'input/014.jpg'...
    'input/015.jpg'...
    'input/016.jpg'...
    'input/017.jpg'...
    'input/018.jpg'...
    'input/019.jpg'...
    'input/020.jpg'...
    'input/021.jpg'...
    'input/022.jpg'...
    'input/023.jpg'...
    'input/024.jpg'...
    'input/025.jpg'
    };
    % Distorted images
    decoded_image_files = {   
    'input_decoded/001_decoded.jpg'...
    'input_decoded/002_decoded.jpg'...
    'input_decoded/003_decoded.jpg'...
    'input_decoded/004_decoded.jpg'...
    'input_decoded/005_decoded.jpg'...
    'input_decoded/006_decoded.jpg'...
    'input_decoded/007_decoded.jpg'...
    'input_decoded/008_decoded.jpg'...
    'input_decoded/009_decoded.jpg'...
    'input_decoded/010_decoded.jpg'...
    'input_decoded/011_decoded.jpg'...
    'input_decoded/012_decoded.jpg'...
    'input_decoded/013_decoded.jpg'...
    'input_decoded/014_decoded.jpg'...
    'input_decoded/015_decoded.jpg'...
    'input_decoded/016_decoded.jpg'...
    'input_decoded/017_decoded.jpg'...
    'input_decoded/018_decoded.jpg'...
    'input_decoded/019_decoded.jpg'...
    'input_decoded/020_decoded.jpg'...
    'input_decoded/021_decoded.jpg'...
    'input_decoded/022_decoded.jpg'...
    'input_decoded/023_decoded.jpg'...
    'input_decoded/024_decoded.jpg'...
    'input_decoded/025_decoded.jpg'
    };
    % Read reference image
    ref_img = imread(input_image_files{i});
    % Read distorted image
    dis_img = imread(decoded_image_files{i});
    % Perform calculation of FSIM and FSIMc
    [FSIM, FSIMc] = FeatureSIM(ref_img, dis_img);
    % Save FSIM and FSIMc into FSIM and FSIMc arrays
    decoded_fsim_array(i) = FSIM;
    decoded_fsimc_array(i) = FSIMc;
end
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% Calculate the mean FSIM and FSIMc in 25 images
%-----------------------------------------------------------------------
% Compressed 1
global mean_compressed_one_fsim;
global mean_compressed_one_fsimc;
mean_compressed_one_fsim = mean(compressed_one_fsim_array);
mean_compressed_one_fsimc = mean(compressed_one_fsimc_array);
% Compressed 25
global mean_compressed_twofive_fsim;
global mean_compressed_twofive_fsimc;
mean_compressed_twofive_fsim = mean(compressed_twofive_fsim_array);
mean_compressed_twofive_fsimc = mean(compressed_twofive_fsimc_array);
% Compressed 50
global mean_compressed_fivezero_fsim;
global mean_compressed_fivezero_fsimc;
mean_compressed_fivezero_fsim = mean(compressed_fivezero_fsim_array);
mean_compressed_fivezero_fsimc = mean(compressed_fivezero_fsimc_array);
% Compressed 75
global mean_compressed_sevenfive_fsim;
global mean_compressed_sevenfive_fsimc;
mean_compressed_sevenfive_fsim = mean(compressed_sevenfive_fsim_array);
mean_compressed_sevenfive_fsimc = mean(compressed_sevenfive_fsimc_array);
% Compressed 100
global mean_compressed_onezerozero_fsim;
global mean_compressed_onezerozero_fsimc;
mean_compressed_onezerozero_fsim = mean(compressed_onezerozero_fsim_array);
mean_compressed_onezerozero_fsimc = mean(compressed_onezerozero_fsimc_array);
% Encoded
global mean_encoded_fsim;
global mean_encoded_fsimc;
mean_encoded_fsim = mean(encoded_fsim_array);
mean_encoded_fsimc = mean(encoded_fsimc_array);
% Decoded
global mean_decoded_fsim;
global mean_decoded_fsimc;
mean_decoded_fsim = mean(decoded_fsim_array);
mean_decoded_fsimc = mean(decoded_fsimc_array);
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% Before saving figures, make sure there is no same file name in the folder
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% Plot FSIM and FSIMc scatter chart
%-----------------------------------------------------------------------
disp('Plotting extra scatter chart');
% Compressed 1
x1 = compressed_one_fsim_array;
y1 = compressed_one_fsimc_array;
scatter(x1, y1, 50, 'blue', 'filled');
title('FSIM & FSIMc of Compressed 1');
xlabel('FSIM');
ylabel('FSIMc');
grid on;
saveas(gcf, 'FSIM_FSIMc_Compressed_1.png');
% Compressed 25
x2 = compressed_twofive_fsim_array;
y2 = compressed_twofive_fsimc_array;
scatter(x2, y2, 50, 'red', 'filled');
title('FSIM & FSIMc of Compressed 25');
xlabel('FSIM');
ylabel('FSIMc');
grid on;
saveas(gcf, 'FSIM_FSIMc_Compressed_25.png');
% Compressed 50
x3 = compressed_fivezero_fsim_array;
y3 = compressed_fivezero_fsimc_array;
scatter(x3, y3, 50, 'magenta', 'filled');
title('FSIM & FSIMc of Compressed 50');
xlabel('FSIM');
ylabel('FSIMc');
grid on;
saveas(gcf, 'FSIM_FSIMc_Compressed_50.png');
% Compressed 75
x4 = compressed_sevenfive_fsim_array;
y4 = compressed_sevenfive_fsimc_array;
scatter(x4, y4, 50, 'green', 'filled');
title('FSIM & FSIMc of Compressed 75');
xlabel('FSIM');
ylabel('FSIMc');
grid on;
saveas(gcf, 'FSIM_FSIMc_Compressed_75.png');
% Compressed 100
x5 = compressed_onezerozero_fsim_array;
y5 = compressed_onezerozero_fsimc_array;
scatter(x5, y5, 50, 'black', 'filled');
title('FSIM & FSIMc of Compressed 100');
xlabel('FSIM');
ylabel('FSIMc');
grid on;
saveas(gcf, 'FSIM_FSIMc_Compressed_100.png');
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% Plot FSIM and FSIMc bar chart
%-----------------------------------------------------------------------
disp('Plotting extra bar chart');
% Data
downsampling_categories = {'Compressed 1', 'Compressed 25', 'Compressed 50', 'Compressed 75', 'Compressed 100', 'Encoded', 'Decoded'};
FSIM_values = [mean_compressed_one_fsim, mean_compressed_twofive_fsim, mean_compressed_fivezero_fsim, mean_compressed_sevenfive_fsim, mean_compressed_onezerozero_fsim, mean_encoded_fsim, mean_decoded_fsim];
FSIMc_values = [mean_compressed_one_fsimc, mean_compressed_twofive_fsimc, mean_compressed_fivezero_fsimc, mean_compressed_sevenfive_fsimc, mean_compressed_onezerozero_fsimc, mean_encoded_fsimc, mean_decoded_fsimc];
% FSIM bar chart
bar(FSIM_values);
% Add title and axis labels
title('Average FSIM in 25 images');
ylabel('Feature Similarity Index');
% Turn grid on
grid on;
xticks(1:length(downsampling_categories));
xticklabels(downsampling_categories);
% Save diagram
saveas(gcf, 'Extra_FSIM_bar_chart.png');
% FSIMc bar chart
bar(FSIMc_values);
% Add labels and title
title('Average FSIMc in 25 images');
ylabel('Feature Similarity Index Extension');
% Turn grid on
grid on;
xticks(1:length(downsampling_categories));
xticklabels(downsampling_categories);
% Save diagram
saveas(gcf, 'Extra_FSIMc_bar_chart.png');
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% Plot comparison bar chart of FSIM and FSIMc
%-----------------------------------------------------------------------
% Define positions for bars
x = 1:numel(FSIM_values); % Positions for the first set of bars
x_shifted = x + 0.3; % Shifted positions for the second set of bars
% Create figure
figure;
% Plot first FSIM bar chart
bar(x, FSIM_values, 0.3, 'blue');
% Hold the plot to add the second set of bars
hold on;
% Plot second FSIMc bar chart
bar(x_shifted, FSIMc_values, 0.3, 'red');
% Add labels, title, and legend
ylabel('FSIM & FSIMc');
title('Average FSIM & FSIMc in 25 images');
legend('FSIM', 'FSIMc');
xticks(1:length(downsampling_categories));
xticklabels(downsampling_categories);
% Turn grid on
grid on;
% Turn hold off to reset plot behaviour
hold off;
% Save diagram
saveas(gcf, 'Extra_FSIM_FSIMc_comparison_bar_chart.png');
%-----------------------------------------------------------------------

%-----------------------------------------------------------------------
% Indication of script completed
%-----------------------------------------------------------------------
disp('Extra FeatureSIM is completed');
%-----------------------------------------------------------------------
